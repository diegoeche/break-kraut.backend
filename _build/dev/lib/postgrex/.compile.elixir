v1.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.BinaryUtils.beam">>,
 'Elixir.Postgrex.BinaryUtils',<<"lib/postgrex/binary_utils.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Date.beam">>,
 'Elixir.Postgrex.Date',<<"lib/postgrex/builtins.ex">>,
 ['Elixir.Kernel.Def','Elixir.Postgrex.Range','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Postgrex.Timestamp','Elixir.Module',
  'Elixir.Protocol','Elixir.Postgrex.Time','Elixir.Postgrex.Interval'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.beam">>,
 'Elixir.Postgrex',<<"lib/postgrex.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.Supervisor.Spec',
  'Elixir.Application'],
 ['Elixir.Supervisor','Elixir.Postgrex.Supervisor',
  'Elixir.Postgrex.TypeServer'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Time.beam">>,
 'Elixir.Postgrex.Time',<<"lib/postgrex/builtins.ex">>,
 ['Elixir.Kernel.Def','Elixir.Postgrex.Range','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Postgrex.Timestamp','Elixir.Module',
  'Elixir.Protocol','Elixir.Postgrex.Date','Elixir.Postgrex.Interval'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Extension.beam">>,
 'Elixir.Postgrex.Extension',<<"lib/postgrex/extension.ex">>,
 ['Elixir.Postgrex.Types','Elixir.Map','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Module','Elixir.Postgrex.TypeInfo','Elixir.String',
  'Elixir.Behaviour'],
 ['Elixir.Code'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Error.beam">>,
 'Elixir.Postgrex.Error',<<"lib/postgrex/error.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Map','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Keyword','Elixir.Module','Elixir.Protocol',
  'Elixir.String','Elixir.Exception'],
 ['Elixir.Access','Elixir.String.Chars','Elixir.Postgrex.ErrorCode',
  'Elixir.Enum'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Timestamp.beam">>,
 'Elixir.Postgrex.Timestamp',<<"lib/postgrex/builtins.ex">>,
 ['Elixir.Kernel.Def','Elixir.Postgrex.Range','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Module','Elixir.Protocol','Elixir.Postgrex.Time',
  'Elixir.Postgrex.Date','Elixir.Postgrex.Interval'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.ErrorCode.beam">>,
 'Elixir.Postgrex.ErrorCode',<<"lib/postgrex/error_code.ex">>,
 [erlang,'Elixir.Path','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Keyword','Elixir.HashDict','Elixir.Module','Elixir.String.Chars',
  'Elixir.RuntimeError','Elixir.String','Elixir.File','Elixir.Enum'],
 [],
 [<<"lib/postgrex/errcodes.txt">>],
 nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Result.beam">>,
 'Elixir.Postgrex.Result',<<"lib/postgrex/result.ex">>,
 ['Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.Protocol','Elixir.String'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.TypeInfo.beam">>,
 'Elixir.Postgrex.TypeInfo',<<"lib/postgrex/type_info.ex">>,
 ['Elixir.Postgrex.Types','Elixir.Kernel.Def','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Module','Elixir.Protocol','Elixir.String'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Extensions.JSON.beam">>,
 'Elixir.Postgrex.Extensions.JSON',<<"lib/postgrex/extensions/json.ex">>,
 ['Elixir.Postgrex.Extension','Elixir.Kernel','Elixir.Module',
  'Elixir.Postgrex.TypeInfo'],
 ['Elixir.Keyword'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Text.beam">>,
 'Elixir.Postgrex.Extensions.Text',<<"lib/postgrex/extensions/text.ex">>,
 ['Elixir.Postgrex.Extension','Elixir.Kernel','Elixir.Module',
  'Elixir.Postgrex.TypeInfo'],
 [erlang,'Elixir.Access','Elixir.Postgrex.Utils'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Interval.beam">>,
 'Elixir.Postgrex.Interval',<<"lib/postgrex/builtins.ex">>,
 ['Elixir.Kernel.Def','Elixir.Postgrex.Range','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Postgrex.Timestamp','Elixir.Module',
  'Elixir.Protocol','Elixir.Postgrex.Time','Elixir.Postgrex.Date'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Utils.beam">>,
 'Elixir.Postgrex.Utils',<<"lib/postgrex/utils.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 ['Elixir.String','Elixir.Enum','Elixir.GenServer','Elixir.Integer',queue],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Range.beam">>,
 'Elixir.Postgrex.Range',<<"lib/postgrex/builtins.ex">>,
 ['Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Postgrex.Timestamp','Elixir.Module','Elixir.Protocol',
  'Elixir.Postgrex.Time','Elixir.Postgrex.Date','Elixir.Postgrex.Interval'],
 [],[],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.TypeServer.beam">>,
 'Elixir.Postgrex.TypeServer',<<"lib/postgrex/type_server.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module','Elixir.GenServer'],
 [erlang,'Elixir.Map','Elixir.Process','Elixir.HashDict','Elixir.List',ets,
  'Elixir.Application'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Types.beam">>,
 'Elixir.Postgrex.Types',<<"lib/postgrex/types.ex">>,
 ['Elixir.Postgrex.Extension','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.Postgrex.TypeInfo'],
 [erlang,'Elixir.Map','Elixir.Postgrex.Extensions.Binary','Elixir.HashDict',
  'Elixir.Access','Elixir.String.Chars','Elixir.String',ets,'Elixir.Enum',
  'Elixir.Integer','Elixir.ArgumentError'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Messages.beam">>,
 'Elixir.Postgrex.Messages',<<"lib/postgrex/messages.ex">>,
 [erlang,'Elixir.Postgrex.BinaryUtils','Elixir.Kernel','Elixir.Module',
  'Elixir.Record','Elixir.Enum'],
 ['Elixir.String.Chars','Elixir.IO',binary],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Connection.beam">>,
 'Elixir.Postgrex.Connection',<<"lib/postgrex/connection.ex">>,
 ['Elixir.Postgrex.BinaryUtils','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Postgrex.Extensions.Binary','Elixir.Keyword',
  'Elixir.Postgrex.Result','Elixir.Module','Elixir.String.Chars',
  'Elixir.Postgrex.Extensions.Text','Elixir.String','Elixir.GenServer',
  'Elixir.Postgrex.Utils','Elixir.Postgrex.Error','Elixir.ArgumentError'],
 [erlang,'Elixir.Map','Elixir.List.Chars','Elixir.Postgrex.Protocol',
  'Elixir.Process',ssl,'Elixir.HashDict','Elixir.Access',
  'Elixir.Postgrex.Messages','Elixir.RuntimeError',inet,'Elixir.HashSet',
  'Elixir.Enum',gen_tcp,'Elixir.System',queue],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Binary.beam">>,
 'Elixir.Postgrex.Extensions.Binary',<<"lib/postgrex/extensions/binary.ex">>,
 ['Elixir.Decimal',erlang,'Elixir.Postgrex.Extension',
  'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Range','Elixir.Kernel',
  'Elixir.Postgrex.Timestamp','Elixir.Module','Elixir.Bitwise',
  'Elixir.Postgrex.Time','Elixir.Postgrex.TypeInfo','Elixir.String',
  'Elixir.Enum',calendar,'Elixir.Integer','Elixir.Postgrex.Date',
  'Elixir.Postgrex.Interval'],
 ['Elixir.Postgrex.Types','Elixir.Map','Elixir.Access','Elixir.String.Chars',
  'Elixir.IO',lists,'Elixir.List','Elixir.Tuple',maps,binary,
  'Elixir.Postgrex.Utils','Elixir.Postgrex.Error','Elixir.ArgumentError'],
 [],nil}.
{<<"/Users/wooga/Games/break-kraut.backend/_build/dev/lib/postgrex/ebin/Elixir.Postgrex.Protocol.beam">>,
 'Elixir.Postgrex.Protocol',<<"lib/postgrex/protocol.ex">>,
 ['Elixir.Postgrex.BinaryUtils','Elixir.Kernel','Elixir.Postgrex.Result',
  'Elixir.Module','Elixir.Postgrex.Messages','Elixir.Logger',
  'Elixir.Postgrex.Utils','Elixir.Postgrex.Error'],
 ['Elixir.Postgrex.Types',erlang,'Elixir.Map','Elixir.Keyword',
  'Elixir.HashDict','Elixir.Access','Elixir.String.Chars',crypto,'Elixir.IO',
  lists,'Elixir.List','Elixir.String','Elixir.Base',binary,
  'Elixir.Postgrex.TypeServer','Elixir.Enum','Elixir.Integer',
  'Elixir.Postgrex.Connection','Elixir.System',queue],
 [],nil}.
